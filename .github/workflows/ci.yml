name: Publish Java Library

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on version tags, aka. semver (eg v1.2.0).

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #      - name: Set up JDK 11
      #        uses: actions/setup-java@v2
      #        with:
      #          java-version: '11'
      #          distribution: 'adoptopenjdk'

      - name: Set up JDK 17
        uses: actions/setup-java@v3.1.1
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build manually
        run: |
          mkdir -p ./build/
          javac -d ./build/ src/AsciiPixels.java
          javac -d ./build/ src/Img2AsciiPixels.java

      - name: Create JAR file manually
        run: |
          jar cf asciipixels.jar -C ./build/ .

      - name: Get the latest tag
        id: get_tag
        run: echo "TAG_NAME=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Publish JAR to GitHub Packages manually
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"tag_name":"${{ env.TAG_NAME }}", "target_commitish":"main", "name":"Release ${{ env.TAG_NAME }}", "body":"Release ${{ env.TAG_NAME }}", "draft":false, "prerelease":false}' \
          https://api.github.com/repos/${{ github.repository }}/releases
          # Upload the JAR file to GitHub Release.
          curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary @asciipixels.jar \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ env.TAG_NAME }} | jq .id)/assets?name=asciipixels.jar"


      #      - name: Publish to Maven Central
      #        run: ./gradlew publish
      #        env:
      #          USERNAME: ${{ secrets.MAVEN_USERNAME }}
      #          PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
